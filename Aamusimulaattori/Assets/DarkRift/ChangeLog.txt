V1.1:
	Server:
	- Kept references to plugins to allow inter-plugin communication.
	- Fixed threading bugs
	- Rewrote to use ThreadPool and less threads in general
	- Fixed irritating re-encoding problem.
	- Added LogTrace but not implemented.
	- Added ConfigReader.Load.
	- Fixed the massive amounts of errors problem! (Turns out I was doing everything wrong :P)

	Documentation:
	- Added Block diagram to Server Manual
	- Added Server Plugin Tutorial
	- Updated server reference manual
	
	API:
	- No need for Vector3Carriers etc! (now done internally)

V1.1.1:
	Server:
	- Fixed bug stopping you from connecting externally

V1.1.2:
	Server:
	- Added logging to files
	- Connections can now be rejected rather then just ignored... :/
	- Fixed bug involving IDs over 255
	
	API:
	- Remade interface to allow multiple connections

V1.1.3:
	Server:
	- Added subdirectory installation tools to Plugin class
	- Fixed that stupid idle CPU usage bug once and for all. Hopefully...
	- Sorted out the error messages that gave completely useless data
	- Added foundations for Extreme version
	- Fixed bug where player disconnecting crashed server
	
	Documentation:
	- Added more on DarkRift architecture in server manual

V1.2:
	Server:
	- Added GetData and SetData to ConnectionServices.
	- Added GetAllConnections to DarkRiftServer.
	- Set log files to use 24 hour time because the 12 hour time was confusing me...
	- Added DarkRift.Storage namespace.
	- Added Database plugin type to allow database integration to a variety of different databases.
	- Added DatabaseRow to standardise query responses.
	- Added QueryParameter to standarise SQL query paramaters.
	- Added database variable to DarkRiftServer.
	- Released MySQL connector plugin.
	- Released LoginPlugin.
	- Added new optional Lib folders in the root directory and plugins directory to store dll files in (not plugins).
	- Added PluginManager.onPluginsLoaded event for to flag when all plugins have been loaded.
	- Added DarkRiftReader and DarkRiftWriter to allow custom serialisation.
	- Updated Transmission to allow new custom serialisation.

	Unity:
	- Added new demo of custom serialisation.

	Documentation:
	- Added Standards section to the Server Plugin Tutorial
	- Updated server reference

V1.3:
	Server:
	- Made Interface.ExecuteCommand public.
	- Added Mode.
	- Added Bootstrap methods.
	- Added IManualDataProcessor.
	- Added port, maxConnections and logData variables to DarkRiftServer.
	- Changed path seperators to system default for UNIX compatibility.
	- Added DarkRiftUtilities.ConvertReaderToWriter.
	- Added NetworkMessage.DecodeData.
	- Deprecated onDataDecoded.
	- Fixed server close bug.
	- Fixed glitch where plugins were recieveing internal NetworkMessages.
	- Added // comments to configuration files.
	- Added comments to configuration file to describe the key/values.
	- Added HasData to ConnectionService.
	
	Transmission:
	- Ability to send send and receive null to omit data completely.

	API:
	- Can now decode and encode messages in the background.
	- Added DarkRiftAPI.workInBackground (default true).
	- Added DarkRiftConnection.workInBackground (default true).
	- Added ability to transmit using custom distribution modes.
	- Added DarkRiftConnection.SendMessage and DarkRiftAPI.SendMessage
	- Added innerException to ConnectionFailedException.
	- Converted DarkRiftAPI to internally use DarkRiftConnection.
	- Added DarkRiftAPI.connection to access internal DarkRiftConnection
	
	Documentation:
	- Added more to the UnityAPI introduction.
	- Update references
	- Added Embedded server guide
	
	NetworkMessage.DecodedData is now replacing the onDataDecoded event. You can call this from the onData
	or onDistribute events to decode the data into NetworkMessage.data only if you need to thus improving
	performance for any throughput traffic and also allowing you to read data in onDistribute.

	!!!!! Your projects will need to reference DarkRift.dll instead of DarkRiftServer.exe as of this update !!!!!

V1.4
	Server:
	- Made server use async sockets to improve performance.
	- Made PerformanceMonitor.totalConnectionReadCounts obsolete (use totalConnectionHeaderCounts and totalConnectionBodyCounts instead).
	- Added PerformanceMonitor.totalConnectionHeaderCounts, totalConnectionBodyCounts, totalConnectionHeaderTime and totalConnectionBodyTime.
	- Fixed off by 1 glitch in the connection limit.
	- Fixed informing client of closing/kicking.
	- Stopped TCP grouping messages.
	- Fixed kickall and kick command bugs.

	API:
	- Added ConnectInBackground methods.
	- Fixed informing server of disconnects.
	- Stopped TCP grouping messages.

V1.4.1
	API:
	- Improved Server.cs.
	
	Server:
	- Bug fixes.

V1.4.2
	API:
	- Fixed NullReferenceException when players disconnected and nothing was listening to onPlayerDisconnected.

	Server:
	- Fixed bug where client didn't always receive messages from onPlayerConnected.
	- Added ConnectionService.onPostPlayerConnect event.

	Unity:
	- Added HeavySyncDemo

	Documentation:
	- Added NetworkMessage to Server reference.

V1.4.3
	Server:
	- Fixed random dropout glitch

V1.4.4
	Server:
	- Security fix
	- Bug fixes

	API:
	- Bug fixes